{
	"name": "df_learing_join",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_emp",
						"type": "DatasetReference"
					},
					"name": "emp"
				},
				{
					"dataset": {
						"referenceName": "ds_dept1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_emp_sink",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMP_ID as integer,",
				"          EMP_NAME as string,",
				"          JOB_TITLE as string,",
				"          MANAGER_ID as integer,",
				"          HIRE_DATE as string,",
				"          SALARY as integer,",
				"          DEPT_ID as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> emp",
				"source(output(",
				"          DEPT_ID as short,",
				"          DEPT_NAME as string,",
				"          LOCATION as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"emp select(mapColumn(",
				"          EMP_ID,",
				"          EMP_NAME,",
				"          MANAGER_ID,",
				"          HIRE_DATE,",
				"          SALARY,",
				"          DEPT_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          EMP_ID,",
				"          EMP_NAME,",
				"          MANAGER_ID,",
				"          HIRE_DATE,",
				"          SALARY,",
				"          DEPT_ID",
				"     )) ~> sink1"
			]
		}
	}
}